/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos;

import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
//import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shibbir
 */
public class check_update extends javax.swing.JFrame {

    /**
     * Creates new form check_update
     */
    String check_date="";
    connectDB cnnt = new connectDB();
    int catid;
    //String cat = null;
    Connection conn;
    Statement statement;
    ResultSet res;
    ResultSet res2;
    Statement s;
    ResultSet r;
    String company_name = "", check_no = "";
    int selected_row = -1;

    public check_update() {
        cnnt.myConnect();
        initComponents();
        setAlwaysOnTop(true);
        setLocation(280, 70);
        Table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Check Sanction Date", "Company Name", "Parchase Date", "Amount", "Bank Name", "Check No"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Sanction");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Withdrow");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Black Chancery", 0, 36)); // NOI18N
        jLabel1.setText("Bank Check table");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(277, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(266, 266, 266))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void Table() {

        try {
            cnnt.myConnect();

            s = cnnt.getStatement();
            r = cnnt.getResultset();

            r = s.executeQuery("SELECT company.company_name,company_check.trans_id,company_check.bank_id,company_check.check_no,company_check.amount,date,company_transaction.purchase_date,bank_profile.bank_name from company_check,company_transaction,bank_profile,company where company_check.bank_id=bank_profile.bank_id and company_check.trans_id=company_transaction.trans_id and company_transaction.company_id=company.company_id");

            DefaultTableModel dtm = new DefaultTableModel();

            dtm.setColumnIdentifiers(new String[]{"Check Sanction Date", "Company Name", "Purchase Date", "Amount", "Bank Name", "Check No"});

            int size = 0;
            while (r.next()) {
                size++;
            }

            dtm.setRowCount(size);

            ResultSet r1 = cnnt.getResultset();
            Statement s1 = cnnt.getStatement();

            r1 = s1.executeQuery("SELECT company.company_name,company_check.trans_id,company_check.bank_id,company_check.check_no,company_check.amount,date,company_transaction.purchase_date,bank_profile.bank_name from company_check,company_transaction,bank_profile,company where company_check.bank_id=bank_profile.bank_id and company_check.trans_id=company_transaction.trans_id and company_transaction.company_id=company.company_id"); //(product join buy_rec using(product_id)) join category using(cat_id)

            int i = 0;
            while (r1.next()) {

                dtm.setValueAt(r1.getString(6), i, 0);
                dtm.setValueAt(r1.getString(1), i, 1);
                // dtm.setValueAt(r1.getInt(3), i, 2);
                dtm.setValueAt(r1.getString(7), i, 2);
                dtm.setValueAt(r1.getInt(5), i, 3);
                dtm.setValueAt(r1.getString(8), i, 4);
                dtm.setValueAt(r1.getString(4), i, 5);

                i++;

            }

            jTable1.setModel(dtm);

        } catch (Exception e) {
            System.out.println(e.toString());
            e.printStackTrace();
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int trans_id = 0;
        ResultSet r_check = cnnt.getResultset();
        Statement s_check = cnnt.getStatement();
        try {
            r_check = s_check.executeQuery("SELECT * FROM `company_check` where check_no= '" + check_no + "' ");
            while (r_check.next()) {
                trans_id = Integer.parseInt(r_check.getString("trans_id"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Update_product.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            s.executeUpdate("DELETE FROM `company_check` WHERE `trans_id` = "+trans_id);
        } catch (SQLException ex) {
            Logger.getLogger(Update_product.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            s.executeUpdate("DELETE FROM `company_transaction` WHERE `trans_id`="+trans_id);
        } catch (SQLException ex) {
            Logger.getLogger(Update_product.class.getName()).log(Level.SEVERE, null, ex);
        }
        Table();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        cnnt.getConnection();
        ResultSet r_check = cnnt.getResultset();
        Statement s_check = cnnt.getStatement();
        ResultSet r_tr = cnnt.getResultset();
        Statement s_tr = cnnt.getStatement();
        Statement s_insert = cnnt.getStatement();
        String check_no = jTable1.getValueAt(selected_row, 5).toString();
        int bank_id = 0;
        
        String c_name = jTable1.getValueAt(selected_row, 1).toString();
        int amount = Integer.parseInt(jTable1.getValueAt(selected_row, 3).toString());
        int trans_id = 0;
        Date date = null;
        System.out.println(check_no);
        try {
            r_check = s.executeQuery("SELECT `trans_id`, `check_no`, `bank_id`, `amount`, `date` FROM `company_check` WHERE check_no= '" + check_no + "' ");
            while (r_check.next()) {
                trans_id = r_check.getInt("trans_id");
                bank_id = r_check.getInt("bank_id");
                date = r_check.getDate("date");
                System.out.println(trans_id);
            }
            System.out.println("Date check = "+date);
        } catch (SQLException ex) {
            Logger.getLogger(Update_product.class.getName()).log(Level.SEVERE, null, ex);
        }
        int company_id = 0;
        try {
            r_tr = s_tr.executeQuery("SELECT * FROM `company_transaction` where trans_id= '" + trans_id + "'");
            while (r_tr.next()) {
                company_id = r_tr.getInt("company_id");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Update_product.class.getName()).log(Level.SEVERE, null, ex);
        }
        String alu = "Update company_transaction SET payment=" + amount + ", due_flag = 0 where trans_id=" + trans_id;
        try {
            s_insert.executeUpdate(alu);
        } catch (SQLException ex) {
            Logger.getLogger(Update_product.class.getName()).log(Level.SEVERE, null, ex);
        }
        Statement s_bank_trans = cnnt.getStatement();

        System.out.println("trans date = "+date);
        String h = "INSERT INTO `bank_transaction`(`bank_id`, `in_out`, `trans_date`, `receiver_donor`, `check_no`) VALUES(" + bank_id + ",0,'" + check_date + "','" + c_name + "','" + check_no + "')";
       try {
            s_bank_trans.executeUpdate(h);
        } catch (SQLException ex) {
            Logger.getLogger(Update_product.class.getName()).log(Level.SEVERE, null, ex);
        }

        Statement s_bank = cnnt.getStatement();
        try {
            s_bank.executeUpdate("UPDATE `bank_profile` SET `amount`=`amount`-" + amount + " WHERE bank_id=1");
        } catch (SQLException ex) {
            Logger.getLogger(Update_product.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ResultSet r_exe=cnnt.getResultset();
        Statement s_exe=cnnt.getStatement();
        Statement s_exe1=cnnt.getStatement();
        
        try {
            System.out.println(trans_id);
            s_exe.executeUpdate("DELETE FROM `company_check` WHERE `trans_id` = "+trans_id);
        } catch (SQLException ex) {
            Logger.getLogger(Update_product.class.getName()).log(Level.SEVERE, null, ex);
        }
        Table();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        selected_row = jTable1.getSelectedRow();
        check_no = jTable1.getValueAt(selected_row, 5).toString();
        check_date=jTable1.getValueAt(selected_row, 0).toString();
        System.out.println(check_date);
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(check_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(check_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(check_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(check_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new check_update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
